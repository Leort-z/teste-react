{"version":3,"sources":["components/Tabela/styles.js","components/Tabela/index.js","components/Select/styles.js","components/Select/index.js","components/Loading/styles.js","components/Loading/index.js","components/Cabecalho/styles.js","components/Cabecalho/index.js","components/Rodape/styles.js","components/Rodape/index.js","styles/globals.js","components/Pagina/index.js","App.js","index.js"],"names":["mainColor","tableBordColor","Table","styled","table","HeadTitle","tr","HeadRow","BodyRows","getRange","school","range","schoolIndex","faixas","findIndex","faixa","count","Tabela","props","data","length","formattedData","schoolData","results","forEach","schoolD","index","tipoesc","push","totalCount","newSchool","formatData","colSpan","rowSpan","map","Container","div","Select","directorship","changeDirectorship","onChange","e","target","value","dre","diretoria","Loading","Component","isLoading","h1","Cabecalho","p","Rodape","GlobalStyle","createGlobalStyle","Pagina","TableLoading","useState","loading","appState","setAppState","setDirectorship","setDre","fetchAllData","fetch","then","response","json","useEffect","url","className","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf3f1f74.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nconst mainColor = '#233a6c'\r\nconst tableBordColor = 'black'\r\n\r\nexport const Table = styled.table`\r\n   max-width: 70vw;\r\n   height: 70vh;\r\n   margin: 0 auto;\r\n\r\n   text-align: center;\r\n\r\n   border-spacing: 0px;\r\n   border: 1px solid ${tableBordColor};\r\n   border-collapse: collapse;\r\n`\r\n\r\nexport const HeadTitle = styled.tr`\r\n   > th {\r\n      padding: 20px;\r\n\r\n      color: white;\r\n      background-color: ${mainColor};\r\n\r\n      font-weight: 400;\r\n      text-transform: uppercase;\r\n      letter-spacing: 0.5px;\r\n\r\n      border: 1px solid ${tableBordColor};\r\n   }\r\n`\r\nexport const HeadRow = styled.tr`\r\n   > th {\r\n      padding: 10px;\r\n\r\n      background-color: #32539A;\r\n      color: white;\r\n\r\n      font-weight: 300;\r\n\r\n      border-collapse: collapse;\r\n      border-right: 1px solid ${tableBordColor};\r\n\r\n      &:first-child {\r\n         width: 15%;\r\n      }\r\n   }\r\n`\r\n\r\nexport const BodyRows = styled.tr`\r\n   > td {\r\n      border-right: 1px solid ${tableBordColor};\r\n   }\r\n\r\n   &:nth-child(2n) {\r\n      background-color: #DDD;\r\n   }\r\n\r\n  &:hover {\r\n      background-color: ${mainColor};\r\n      color: white;\r\n   }\r\n\r\n`","import React from 'react';\r\n\r\nimport { Table, HeadTitle, HeadRow, BodyRows } from './styles'\r\n\r\nfunction formatData(data) {\r\n  let schoolData = []\r\n  data.results.forEach((schoolD) => {\r\n    const index = schoolData.findIndex(school => school.tipoesc === schoolD.tipoesc)\r\n    if (index !== -1) {\r\n      schoolData[index].faixas.push({ faixa: schoolD.faixa, count: schoolD.count })\r\n      schoolData[index].totalCount += schoolD.count\r\n    }\r\n    else {\r\n      const newSchool = {\r\n        tipoesc: schoolD.tipoesc,\r\n        faixas: [{\r\n          faixa: schoolD.faixa,\r\n          count: schoolD.count\r\n        }],\r\n        totalCount: schoolD.count\r\n      }\r\n      schoolData.push(newSchool)\r\n    }\r\n  })\r\n  return schoolData\r\n}\r\n\r\nfunction getRange(school, range) {\r\n  const schoolIndex = school.faixas.findIndex(school => school.faixa === range)\r\n  return schoolIndex !== -1 ? school.faixas[schoolIndex].count : 0\r\n}\r\n\r\nconst Tabela = (props) => {\r\n  const { data } = props;\r\n\r\n  if (!data || data.length === 0)\r\n    return <p>No data, try again later</p>\r\n\r\n  let formattedData = formatData(data)\r\n\r\n  return (\r\n      <>\r\n        <Table>\r\n        <thead>\r\n          <HeadTitle>\r\n            <th colSpan={9}>Escolas por tipo e quantidade de alunos</th>\r\n            <th rowSpan={2}>Total de unidades escolares por tipo</th>\r\n          </HeadTitle>\r\n          <HeadRow>\r\n            <th>Tipo de escola</th>\r\n            <th>Sem estudantes cadastrados</th>\r\n            <th>1 a 250 estudantes</th>\r\n            <th>251 a 500 estudantes</th>\r\n            <th>501 a 1000 estudantes</th>\r\n            <th>1001 a 1500 estudantes</th>\r\n            <th>1501 a 2000 estudantes</th>\r\n            <th>2001 a 2500 estudantes</th>\r\n            <th>Mais de 2500 estudantes</th>\r\n          </HeadRow>\r\n        </thead>\r\n        <tbody>\r\n          {formattedData.map((school, index) => {\r\n            return (\r\n              <BodyRows key={index}>\r\n                <td>{school.tipoesc}</td>\r\n                <td>{getRange(school, 'Sem estudantes cadastrados')}</td>\r\n                <td>{getRange(school, '1 a 250 estudantes')}</td>\r\n                <td>{getRange(school, '251 a 500 estudantes')}</td>\r\n                <td>{getRange(school, '501 a 1000 estudantes')}</td>\r\n                <td>{getRange(school, '1001 a 1500 estudantes')}</td>\r\n                <td>{getRange(school, '1501 a 2000 estudantes')}</td>\r\n                <td>{getRange(school, '2001 a 2500 estudantes')}</td>\r\n                <td>{getRange(school, 'Mais de 2500 estudantes')}</td>\r\n                <td>{school.totalCount}</td>\r\n              </BodyRows>\r\n            )\r\n          })}\r\n        </tbody>\r\n        </Table>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Tabela","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n   height: 14vh;\r\n   width: 70vw;\r\n   margin: 0 auto;\r\n   \r\n   display: flex;\r\n   align-items: center;\r\n\r\n   > label {\r\n      margin-right: 20px;\r\n      font-size: 1.6rem;\r\n      font-weight: 500;\r\n   }\r\n\r\n   > select {\r\n      width: 50%;\r\n      height: 40%;\r\n      font-size: 1.1rem;\r\n\r\n      border: 2px solid #233a6c;\r\n\r\n      > option {\r\n         font-size: 1.1rem;\r\n      }\r\n   }\r\n`","import { Container } from './styles'\r\n\r\nexport default function Select({ directorship, changeDirectorship }) {\r\n  if (!directorship || directorship.length === 0)\r\n    return <p>NÃ£o conseguimos obter os dados, tente novamente mais tarde</p>\r\n\r\n  function handleDreChange(e) {\r\n    changeDirectorship(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <label>Selecione uma diretoria: </label>\r\n      <select onChange={handleDreChange}>\r\n        <option value='todasDiretorias'>TODAS DIRETORIAS</option>\r\n        {directorship.results.map(directorship => {\r\n          return (\r\n            <option key={directorship.dre} value={directorship.dre}>{directorship.diretoria}</option>\r\n          )\r\n        })}\r\n      </select>\r\n    </Container>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n   height: 70vh;\r\n\r\n   display: flex;\r\n   align-items: center;\r\n   justify-content: center;\r\n\r\n   font-size: 3rem;\r\n`","import { Container } from './styles'\r\n\r\nfunction Loading(Component) {\r\n  return function LoadingComponent({ isLoading, ...props }) {\r\n    if (!isLoading) return <Component {...props} />\r\n    return (\r\n      <Container>\r\n        <p> Carregando os dados...</p>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Loading","import styled from 'styled-components'\r\n\r\nexport const Container = styled.h1`\r\n  height: 7vh;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  background-color: #233a6c;\r\n  color: #fff;\r\n\r\n  font-weight: 400;\r\n  font-size: 1.5rem;\r\n`","import { Container } from './styles'\r\n\r\nfunction Cabecalho() {\r\n  return <Container>Teste de ReactJS - AMcomE</Container>\r\n}\r\n\r\nexport default Cabecalho\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.p`\r\n   height: 5vh;\r\n   margin-top: 4vh;\r\n\r\n   display: flex;\r\n   align-items: center;\r\n   justify-content: center;\r\n\r\n   background-color: #444;\r\n   color: white;\r\n`;","import { Container } from './styles'\r\n\r\nfunction Rodape(Component) {\r\n  return (\r\n    <Container>\r\n      Secretaria Municipal de EducaÃ§Ã£o - SME\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Rodape","import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'Roboto';\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n`\r\n\r\nexport default GlobalStyle","import { useEffect, useState } from 'react'\r\n\r\nimport Table from '../Tabela/index.js'\r\nimport Select from '../Select/index.js'\r\nimport Loading from '../Loading/index.js'\r\nimport Cabecalho from '../Cabecalho/index.js'\r\nimport Rodape from '../Rodape/index.js'\r\n\r\nimport GlobalStyle from '../../styles/globals.js'\r\n\r\nexport default function Pagina() {\r\n\r\n  const TableLoading = Loading(Table)\r\n\r\n  const [appState, setAppState] = useState({\r\n    loading: false,\r\n    data: null\r\n  })\r\n\r\n  const [directorship, setDirectorship] = useState({\r\n    loading: false,\r\n    data: null\r\n  })\r\n\r\n  const [dre, setDre] = useState('')\r\n\r\n  function fetchAllData() {\r\n    setAppState({ loading: true })\r\n    const url = 'https://hom-escolaaberta.sme.prefeitura.sp.gov.br/api/smeescolas/'\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setAppState({ loading: false, data: data })\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAllData();\r\n  }, [setAppState])\r\n\r\n  useEffect(() => {\r\n    setAppState({ loading: true })\r\n    const url = 'https://hom-escolaaberta.sme.prefeitura.sp.gov.br/api/diretorias/'\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setDirectorship({ loading: false, data: data })\r\n      })\r\n  }, [setDirectorship])\r\n\r\n  useEffect(() => {\r\n    if (dre === 'todasDiretorias') {\r\n      fetchAllData();\r\n    }\r\n    setAppState({ loading: true })\r\n    const url = `https://hom-escolaaberta.sme.prefeitura.sp.gov.br/api/smeescolas/${dre}`\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setAppState({ loading: false, data: data })\r\n      })\r\n  }, [dre])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <GlobalStyle />\r\n      <Cabecalho></Cabecalho>\r\n      <Select directorship={directorship.data} changeDirectorship={setDre}></Select>\r\n      <TableLoading isLoading={appState.loading} data={appState.data} />\r\n      <Rodape></Rodape>\r\n    </div>\r\n  )\r\n}","import Pagina from './components/Pagina'\n\nexport default function App() {\n  return (<Pagina />)\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}